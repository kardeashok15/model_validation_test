import re
from django.urls import path, re_path
from matplotlib.cbook import report_memory
from pandas import read_parquet
from pandas.core.dtypes.missing import na_value_for_dtype

from modelvalidation import viewsViex
from . import views
from . import modelview
from . import saveTables
from . import utilities
from . import vaexPlots
# from . import exportFromIpynb

urlpatterns = [
    path('index/', views.index),
    path('', viewsViex.table, name="home"),
    path('viewData/', views.viewData, name="viewData"),
    path('viewDataType/', views.viewDataType, name="viewDataType"),
    path('viewNumData/', views.viewNumData, name="viewNumData"),
    path('file_upload', views.file_upload, name="file_upload"),
    path('missingData/', views.missingData, name="missingData"),
    path('dataCleaning/', views.dataCleaning, name="dataCleaning"),
    path('showCatColFreq/', views.showCatColFreq, name="showCatColFreq"),
    path('showChartTypes/', views.showChartTypes, name="showChartTypes"),
#     path('showUniVarChartTypes/', views.showUniVarChartTypes,
#          name="showUniVarChartTypes"),
#     path('showSNSChart/', views.showSNSChart, name="showSNSChart"),
#     path('showPieChart/', views.showPieChart, name="showPieChart"),
#     path('showDistPlot/', views.showDistPlot, name="showDistPlot"),
#     path('showBoxPlot/', views.showBoxPlot, name="showBoxPlot"),
#     path('showCatCountPlot/', views.showCatCountPlot, name="showCatCountPlot"),
#     path('plotinsured_occupations/', views.plotinsured_occupations,
#          name="plotinsured_occupations"),
#     path('plotinsoccuvsincstate/', views.plotinsoccuvsincstate,
#          name="plotinsoccuvsincstate"),
#     path('plotinsoccuvsincstatestacked/', views.plotinsoccuvsincstatestacked,
#          name="plotinsoccuvsincstatestacked"),
#     path('vardistbyfraudold/', views.var_dist_by_fraud_old,
#          name="vardistbyfraudold"),
#     path('pairwise_correlation/', views.pairwise_correlation,
#          name="pairwise_correlation"),
#     path('vardistbyfraud/', views.vardistbyfraud,
#          name="vardistbyfraud"),
#     path('stripplot/', views.stripplot,
#          name="stripplot"),
#     path('totalclaim_boxplot/', views.totalclaim_boxplot,
#          name="totalclaim_boxplot"),
#     path('vehicleclaim/', views.vehicle_claim,
#          name="vehicleclaim"),
#     path('scattred3d/', views.scattred3d,
#          name="scattred3d"),
#     path('bubblePlot3d/', views.bubblePlot3d,
#          name="bubblePlot3d"),
     path('showChartTypes/', vaexPlots.showChartTypes_vaex, name="showChartTypes"),
     path('showUniVarChartTypes/', vaexPlots.showUniVarChartTypes_vaex,
         name="showUniVarChartTypes"),
     path('showSNSChart/', vaexPlots.showSNSChart_vaex, name="showSNSChart"),
     path('showPieChart/', vaexPlots.showPieChart_vaex, name="showPieChart"),
     path('showDistPlot/', vaexPlots.showDistPlot_vaex, name="showDistPlot"),
     path('showBoxPlot/', vaexPlots.showBoxPlot_vaex, name="showBoxPlot"),
     path('showCatCountPlot/', viewsViex.showCatCountPlot,
          name="showCatCountPlot"),
     path('plotinsured_occupations/', viewsViex.plotinsured_occupations,
          name="plotinsured_occupations"),
     path('plotinsoccuvsincstate/', viewsViex.plotinsoccuvsincstate,
          name="plotinsoccuvsincstate"),
     path('plotinsoccuvsincstatestacked/', viewsViex.plotinsoccuvsincstatestacked,
          name="plotinsoccuvsincstatestacked"),
     path('vardistbyfraudold/', viewsViex.var_dist_by_fraud_old,
          name="vardistbyfraudold"),
     path('pairwise_correlation/', viewsViex.pairwise_correlation,
          name="pairwise_correlation"),
     path('vardistbyfraud/', viewsViex.vardistbyfraud,
          name="vardistbyfraud"),
     path('stripplot/', viewsViex.stripplot,
          name="stripplot"),
     path('totalclaim_boxplot/', viewsViex.totalclaim_boxplot,
          name="totalclaim_boxplot"),
     path('vehicleclaim/', viewsViex.vehicle_claim,
          name="vehicleclaim"),
     path('scattred3d/', viewsViex.scattred3d,
          name="scattred3d"),
     path('bubblePlot3d/', viewsViex.bubblePlot3d,
          name="bubblePlot3d"),
    re_path(r'^ajax/update_missingval/$',
            views.update_missingval, name='update_missingval'),
    re_path(r'^ajax/deleteColumns/$',
            views.deleteColumns, name='deleteColumns'),
    re_path(r'^ajax/deleteColumnsFreqwise/$',
            views.deleteColumnsFreqwise, name='deleteColumnsFreqwise'),
    re_path(r'^ajax/updateCT/$',
            views.updateCT, name='updateCT'),
    re_path(r'^ajax/dropFinalColumns/$',
            views.dropFinalColumns, name='dropFinalColumns'),
    re_path(r'^ajax/getTargetColVals/$',
            views.getTargetColVals, name='getTargetColVals'),
    re_path(r'^ajax/updateColData/$',
            views.updateColData, name='updateColData'),
    re_path(r'^ajax/getUpdatedColVals/$',
            views.getUpdatedColVals, name='getUpdatedColVals'),
    re_path(r'^ajax/renameColNames/$',
            views.renameColNames, name='renameColNames'),
    re_path(r'^ajax/getParamName/$',
            modelview.getParamName, name='getParamName'),
    re_path(r'^ajax/setParamName/$',
            modelview.setParamName, name='setParamName'),
    re_path(r'^saveComments/$',
            modelview.saveComments, name='saveComments'),
    re_path(r'^ajax/resamplingData/$',
            views.resamplingData, name='resamplingData'),
    re_path(r'^ajax/RF_ajax/$',
            modelview.randomForest_ajax, name='RF_ajax'),
    re_path(r'^sendCnfrmMail/$',
            views.sendCnfrmMail2, name='sendCnfrmMail'),
    re_path(r'^dataQualityRes/$',
            views.dataQuality, name='dataQualityRes'),
    re_path(r'^cnfrmSrc/$',
            views.cnfrmSrc, name='cnfrmSrc'),
    re_path(r'^updateResp/$',
            views.updateResp, name='updateResp'),
    path('showCrossTab/', views.showCrossTab, name="showCrossTab"),
    path('mean_ad/', views.mean_ad, name="mean_ad"),
    path('median_ad/', views.median_ad, name="median_ad"),
    path('showcorrelation/', views.showcorrelation, name="showcorrelation"),
    path('dist_numevari_catvar/', views.dist_numevari_catvar,
         name="dist_numevari_catvar"),
    path('showSNScorrelation/', views.showSNScorrelation,
         name="showSNScorrelation"),
    path('updateCrossTab/',
         views.updateCrossTab, name='updateCrossTab'),
    path('dummy_vars/', views.create_dummy_variables, name='dummy_vars'),
    path('std_features/', views.std_features, name='std_features'),
    path('test_multicollinearity/', views.test_multicollinearity,
         name='test_multicollinearity'),
    path('dropfeatures/', views.dropfeatures, name='dropfeatures'),
    path('detect_outliers/', views.detect_outliers, name='detect_outliers'),
    path('setScheduler/', views.setScheduler, name='setScheduler'),
    path('setScheduler1/', views.setScheduler1, name='setScheduler1'),
    path('setProfile/', views.setProfile, name='setProfile'),
    #     path('randomForest/', views.randomForest_defSettings_Tests, name='randomForest'),
    path('RF_tune_Paras/', views.random_forest_tune_Paras, name='RF_tune_Paras'),
    path('XGBoost_Model/', views.XGBoost_Model, name='XGBoost_Model'),
    path('XGBoost_Optimization_RS/', views.XGBoost_Optimization_RS,
         name='XGBoost_Optimization_RS'),
    path('updateData/', views.updateData,
         name='updateData'),
    path('renameCols/', views.renameCols,
         name='renameCols'),
    path('tuneParams/', modelview.tuneParams,
         name='tuneParams'),
    path('resample/', views.showTargetColFreq,
         name='resample'),
    path('randomForest_NoTunning/', modelview.randomForest_NoTunning,
         name='randomForest_NoTunning'),
    path('randomForest_RS/', modelview.randomForest_RS,
         name='randomForest_RS'),
    path('randomForest_GS/', modelview.randomForest_GS,
         name='randomForest_GS'),
    path('xgBoost_NoTunning/', modelview.xgBoost_NoTunning,
         name='xgBoost_NoTunning'),
    path('xgBoost_RS/', modelview.xgBoost_RS,
         name='xgBoost_RS'),
    path('xgBoost_GS/', modelview.xgBoost_GS,
         name='xgBoost_GS'),
    path('MLP_NoTunning/', modelview.MLP_NoTunning,
         name='MLP_NoTunning'),
    path('MLP_RS/', modelview.MLP_RS,
         name='MLP_RS'),
    path('MLP_GS/', modelview.MLP_GS,
         name='MLP_GS'),
    path('GBC_NoTunning/', modelview.GBC_NoTunning,
         name='GBC_NoTunning'),
    path('GBC_RS/', modelview.GBC_RS,
         name='GBC_RS'),
    path('GBC_GS/', modelview.GBC_GS,
         name='GBC_GS'),
    path('KNN_NT/', modelview.KNN_NT,
         name='KNN_NT'),
    path('KNN_RS/', modelview.KNN_RS,
         name='KNN_RS'),
    path('KNN_GS/', modelview.KNN_GS,
         name='KNN_GS'),
    path('SVM_NT/', modelview.SVM_NT,
         name='SVM_NT'),
    path('SVM_RS/', modelview.SVM_RS,
         name='SVM_RS'),
    path('SVM_GS/', modelview.SVM_GS,
         name='SVM_GS'),
    path('BC_NT/', modelview.BC_NT,
         name='BC_NT'),
    path('BC_RS/', modelview.BC_RS,
         name='BC_RS'),
    path('BC_GS/', modelview.BC_GS,
         name='BC_GS'),
    path('randomForest/', modelview.randomForest,
         name='randomForest'),
    path('xgBoost/', modelview.xgBoost,
         name='xgBoost'),
    path('MLP/', modelview.MLP,
         name='MLP'),
    path('GBC/', modelview.GBC,
         name='GBC'),
    path('KNN/', modelview.KNN,
         name='KNN'),
    path('SVM/', modelview.SVM,
         name='SVM'),
    path('BC/', modelview.BC,
         name='BC'),
    path('sendMail/', modelview.sendMail,
         name='sendMail'),
    path('sendGMail/', modelview.sendGMail,
         name='sendGMail'),
    path('confirmSrc/', views.confirmSrc,
         name='confirmSrc'),
    path('dataQuality/', views.dataQuality,
         name='dataQuality'),
    re_path(r'^generateReport/$', modelview.generateReport,
            name='generateReport'),
    path('Report/', modelview.ReportTxtEd,
         name='Report'),
    path('downloadReport/', modelview.downloadReport,
         name='downloadReport'),
    re_path(r'^saveChartComments/$', views.saveChartComments,
            name='saveChartComments'),
    re_path(r'^DatatypeComments/$', views.DatatypeComments,
            name='DatatypeComments'),
    path('Summary/', modelview.Summary,
         name='Summary'),
    re_path(r'^saveSummaryData/$', modelview.saveSummaryData,
            name='saveSummaryData'),
    path('documantation/', modelview.documantation,
         name='documentation'),
    re_path(r'^saveDocumentationData/$', modelview.saveDocumentationData,
            name='saveDocumentationData'),
    path('impCtrl/', views.impCtrl,
         name='impCtrl'),
    re_path(r'^sendImpCtrlCnfrmMail/$', views.sendImpCtrlCnfrmMail,
            name='sendImpCtrlCnfrmMail'),
    re_path(r'^cnfrmImpCtrlResp/$',
            views.cnfrmImpCtrlResp, name='cnfrmImpCtrlResp'),
    re_path(r'^updateImpCtrlResp/$',
            views.updateImpCtrlResp, name='updateImpCtrlResp'),
    re_path(r'^getSecResp/$',
            views.getSecResp, name='getSecResp'),
    re_path(r'^updateImpCtrlReportComment/$', views.updateImpCtrlReportComment,
            name='updateImpCtrlReportComment'),
    re_path(r'^saveChartImage/$', views.saveChartImage, name='saveChartImage'),
    re_path(r'^saveReportImage/$', modelview.saveReportImage,
            name='saveReportImage'),
    re_path(r'^saveReportComment/$', modelview.saveReportComment,
            name='saveReportComment'),
    re_path(r'^deleteReportComment/$', modelview.deleteReportComment,
            name='deleteReportComment'),
    path('processStatus/', views.processStatus, name='processStatus'),
    path('modelValReq/', modelview.modelValReq, name='modelValReq'),
    path('valFindings/', modelview.valFindings, name='valFindings'),
    re_path(r'^savevalFindings/$', modelview.savevalFindings,
            name='savevalFindings'),
    re_path(r'^getvalFindings/$', modelview.getvalFindings,
            name='getvalFindings'),
    re_path(r'^sendDevloperMail/$', modelview.sendDevloperMail,
            name='sendDevloperMail'),
    path('valFindingsResp/', modelview.valFindingsResp, name='valFindingsResp'),
    re_path(r'^savevalFindingsResp/$', modelview.savevalFindingsResp,
            name='savevalFindingsResp'),
    re_path(r'^savevalFindingsComment/$', modelview.savevalFindingsComment,
            name='savevalFindingsComment'),
    re_path(r'^getSubTitle/$', views.getSubTitle, name='getSubTitle'),
    path('runModel/', modelview.runModel, name='runModel'),
    re_path(r'^getSubSubTitle/$', views.getSubSubTitle, name='getSubSubTitle'),
    path('contacts/', views.contacts, name='contacts'),
    re_path(r'updateContacts/$', views.updateContacts, name='updateContacts'),
    path('policies/', views.policies, name='policies'),
    re_path(r'updatePolicy/$', views.updatePolicy, name='updatePolicy'),
    re_path(r'addRptRef/$', views.addRptRef, name='addRptRef'),
    path('modelUsage/', modelview.modelUsage, name='modelUsage'),
    re_path(r'saveModelUsageReq/$', modelview.saveModelUsageReq,
            name='saveModelUsageReq'),
    path('modelUsageResp/', modelview.modelUsageResp, name='modelUsageResp'),
    re_path(r'saveModelUsageResp/$', modelview.saveModelUsageResp,
            name='saveModelUsageResp'),
    path('openFile/', modelview.openFile, name='openFile'),
    path('WIP/', views.WIP, name='WIP'),
    re_path(r'getPrvChart/$', modelview.getPrvChart, name='getPrvChart'),
    re_path(r'runModelAjax/$', modelview.runModelAjax, name='runModelAjax'),
    re_path(r'getSubSubTitleIdx/$', views.getSubSubTitleIdx,
            name='getSubSubTitleIdx'),
    path('conceptualsoundness/', modelview.conceptualsoundness,
         name='conceptualsoundness'),
    re_path(r'saveCSData/$', modelview.saveCSData,
            name='saveCSData'),
    re_path(r'getSubTitleCS/$', views.getSubTitleCS,
            name='getSubTitleCS'),
    #     path('exporttoPY/', exportFromIpynb.exporttoPY, name='exporttoPY'),
    path('runFile/', modelview.runFile, name='runFile'),
    path('viewConcSnd/', modelview.viewConcSnd, name='viewConcSnd'),
    path('viewModelUsage/', modelview.viewModelUsage, name='viewModelUsage'),
    path('dataIntegrity/', modelview.dataIntegrity, name='dataIntegrity'),
    re_path(r'saveDIData/$', modelview.saveDIData, name='saveDIData'),
    re_path(r'showPlotnComm/$', modelview.showPlotnComm, name='showPlotnComm'),
    path('replication/', modelview.replication, name='replication'),
    re_path(r'saveReplicationData/$', modelview.saveReplicationData,
            name='saveReplicationData'),
    re_path(r'runReplicationFile/$', modelview.runReplicationFile,
            name='runReplicationFile'),
    path('viewDI/', modelview.viewDI, name='viewDI'),
    re_path(r'saveModelChartImage/$', modelview.saveModelChartImage,
            name='saveModelChartImage'),
    path('testPdf/', views.testPdf, name="testPdf"),
    re_path(r'sendReportMail/$', modelview.sendReportMail,
            name='sendReportMail'),
    path('ReportTxtEd/', modelview.ReportTxtEd, name='ReportTxtEd'),
    re_path('saveReportCommentTxtEd/', modelview.saveReportCommentTxtEd,
            name='saveReportCommentTxtEd'),
    re_path(r'^generateReportTxtEd/$', modelview.generateReportTxtEd,
            name='generateReportTxtEd'),
    re_path(r'saveTableInfo/$', saveTables.saveTableInfo, name='saveTableInfo'),
    re_path(r'getTableInfo/$', saveTables.getTableInfo, name='getTableInfo'),
    re_path(r'testTable/$', saveTables.testTable, name='testTable'),
    re_path('saveReplicationComments/$',
            modelview.saveReplicationComments, name='saveReplicationComments'),
    re_path('saveCRComments/$', modelview.saveCRComments, name='saveCRComments'),
    re_path('getCRComments/$', modelview.getCRComments, name='getCRComments'),
    re_path('getCRHelpData/$', modelview.getCRHelpData, name='getCRHelpData'),
    re_path('getAllCRComments/$', modelview.getAllCRComments,
            name='getAllCRComments'),
     path('skipUpdateData/',views.skipUpdateData,name='skipUpdateData'),
     re_path(r'^saveDocComments/$',modelview.saveDocComments,name='saveDocComments'),
     re_path(r'^getDocComments/$',modelview.getDocComments,name='getDocComments'),
     re_path(r'^docCommResp/$',modelview.docCommResp,name='docCommResp'),
     re_path(r'^saveDocCommentsResp/$',modelview.saveDocCommentsResp,name='saveDocCommentsResp'),
     path('selCols/',views.selCols,name='selCols'),
     path('importScnData/',utilities.scnAnalysis,name='importScnData'),
     re_path(r'TestHIST/$',views.TestHIST,name='TestHIST'),
     re_path(r'saveScnData/$',utilities.saveScnData,name='saveScnData'),
     re_path(r'runScnFile/$',utilities.runScnFile,name='runScnFile'),  
     re_path(r'showScnPlot/$',utilities.showScnPlot,name='showScnPlot'),
     path('VaroReport/', modelview.ReportTxtEdVaro,name='VaroReport'),
        re_path(r'copyModelData/$',modelview.copyModelData,name='copyModelData'), 
        re_path(r'deleteModelData/$',modelview.deleteModelData,name='deleteModelData'),
        re_path(r'getProcessDone/$',views.getProcessDone,name='getProcessDone'),
        path('sampleEDAData/',viewsViex.sampleEDAData,name='sampleEDAData'),
        re_path(r'sampleDateRange/$',viewsViex.sampleDateRange,name='sampleDateRange'),
        re_path(r'CheckDagta/$',viewsViex.CheckDagta,name='CheckDagta'),  
        re_path(r'saveEDASampleData/$',viewsViex.saveEDASampleData,name='saveEDASampleData'),
        re_path(r'uploadImage/$',modelview.uploadImage,name='uploadImage'),
        path('question/',utilities.quetion,name='question'),
        re_path(r'saveQuestion/$', utilities.saveQuestion,name='saveQuestion'),
        re_path(r'sendQuestionLog/$',utilities.sendQuestionLog,name='sendQuestionLog'),
        re_path(r'^QuestionResp/$', utilities.questionResp,name='QuestionResp'),
        re_path(r'getQtnTxt/$', utilities.getQtnTxt,name='getQtnTxt'),
        re_path(r'saveQtnResp/$',utilities.saveQtnResp,name='saveQtnResp'),
]
